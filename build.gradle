buildscript {
    repositories {
        mavenCentral()
		
	    maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'maven'

version = "MC${minecraft_version}-${mod_version}"
group= "grondag.acuity" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "acuity"


sourceCompatibility = 1.8
targetCompatibility = 1.8

// Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = "snapshot_20171003"
    useDepAts = false
    
    clientJvmArgs += '-Dfml.coreMods.load=grondag.acuity.FMLPlugin'
    
    replaceIn "Reference.java"
    replace "@VERSION@", project.version
}

jar.manifest {
	attributes 'FMLAT': 'acuity_at.cfg'
    attributes 'FMLCorePlugin': 'grondag.acuity.FMLPlugin'
	attributes 'FMLCorePluginContainsFMLMod': 'true'
}

jar {
    from sourceSets.main.output
    from sourceSets.api.output
}
    
task deobfJar(type: Jar) {
	from sourceSets.main.allSource
    from sourceSets.main.output
    from sourceSets.api.allSource
    from sourceSets.api.output
    classifier = 'dev'
}

task apiJar(type: Jar, dependsOn: 'sourceApiJava') {
    from sourceSets.api.allSource
    from sourceSets.api.output
    //include 'grondag/acuity/api/**/*'
    classifier 'api'
}

artifacts {
    archives sourceJar
    archives deobfJar
    archives apiJar
    archives jar
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
	main {
	        java {
	            include 'grondag/**/*'
	        }
	        resources
	        {
	        	include '**/*'
	        }
    }
	api {
		java {
	            include 'grondag/**'
	        }
	}
    test {
        java {
            exclude 'grondag/**'
        }
    }
}
